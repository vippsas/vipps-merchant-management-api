openapi: 3.0.0
info:
  title: Vipps Partner API
  version: "1.3.1"
  description: |
    The Vipps Partner API lets partners, banks and large corporations manage
    their merchants (for example, submit product orders on behalf of their
    merchants) and sales units.
    See the [API Guide](https://vippsas.github.io/vipps-developer-docs/docs/APIs/partner-api) for more information.
  contact:
    name: Vipps AS
    url: "https://vippsas.github.io/vipps-developer-docs/"
servers:
  - url: "https://api.vipps.no/partner-api"
    description: Vipps Partner API
tags:
  - name: Vipps Product Orders
    description: Submit product orders on behalf of their merchants
  - name: Merchants
    description: Manage merchants
  - name: Sales units
    description: Manage sales units
paths:
  /v1/products/orders:
    parameters: []
    post:
      summary: Order products on behalf of merchants
      operationId: orderProduct
      description: |
        Order products on behalf of merchants:
        Partners can submit data that pre-fills the order form, so the merchant
        can review the information and submit the product order on portal.vipps.no.
        Please note complianceData and website information are required for VIPPS_PA_NETT product type.
        Partners can still submit the product orders without them but the merchant will have to fill
        website and compliance data information manually in the merchant portal product order form and submit.
      tags:
        - Vipps Product Orders
      parameters:
        - $ref: "#/components/parameters/Ocp-APIM-Subscription-Key"
        - $ref: "#/components/parameters/Idempotency-Key"
      security:
        - Bearer-Authorization: []
      requestBody:
        description: Product order for a merchant request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductOrderRequest"
            examples:
              example-1:
                value:
                  orgno: "987654321"
                  salesUnitName: ACME Fantastic Fitness
                  salesUnitLogo: VGhlIGltYWdlIGdvZXMgaGVyZQ==
                  settlementAccountNumber: "86011117947"
                  pricePackageId: 8a11afb7-c223-48ed-8ca6-4722b97261aa
                  productType: VIPPS_PA_NETT
                  annualTurnover: 100000
                  intendedPurpose: |-
                    Gym membership for accessing the gym's facilities.
                    Guest will be not physically present when buying the subscription,
                    as that is done on the gym's website.
                  website:
                    url: "https://example.com"
                    termsUrl: "https://example.com/terms-and-conditions"
                    testWebsiteUrl: "https://test.example.com"
                    testWebsiteUsername: test-user
                    testWebsitePassword: test-password
                  complianceData:
                    giftCard:
                      isSalesPercentageLessThanTen: false
                      validityDuration: 3 years
                    membership:
                      turnoverShare: about 25%
                      periodDistribution: 50% yearly 20% monthly
                    subscription:
                      turnoverShare: about 25%
                      periodDistribution: 50% yearly 20% monthly
                    course:
                      turnoverShare: about 25%
                      timeBeforeOrder: 10 days
                      period: once every 6 week
                      isOnlineCourseOffered: true
                      onlineAccessibleTime: for 3 months
                    ticket:
                      turnoverShare: about 25%
                      prepurchaseTime: 10 weeks
                    rent:
                      turnoverShare: about 25%
                      prepurchaseTime: 15 days
                      averageRentalDuration: 3 weeks
                    prepaidServices:
                      turnoverShare: about 25%
                      prepurchaseTime: 10 weeks
                    donation:
                      acceptDonations: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductOrderResponse"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "405":
          description: Request method not supported
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Problem"
        "422":
          description: Unprocessable Entity
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /v0/merchants/{orgno}:
    get:
      tags:
        - Merchants
      security:
        - Bearer-Authorization: []
      summary: Get merchant by organization number
      operationId: getMerchant
      parameters:
        - $ref: "#/components/parameters/Ocp-APIM-Subscription-Key"
        - name: orgno
          in: path
          description: The Organization number for the merchant
          required: true
          schema:
            maxLength: 9
            minLength: 9
            pattern: ^\d{9}$
            type: string
            example: 987654321
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/GetOrg"
        "400":
          description: Invalid request, check request parameters
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/MiddlewareError"
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Item does not exist
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Request method not supported
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
  /v0/salesunits/{msn}:
    get:
      tags:
        - Sales units
      security:
        - Bearer-Authorization: []
      summary: Get sale unit details based on MSN
      operationId: getMSN
      parameters:
        - $ref: "#/components/parameters/Ocp-APIM-Subscription-Key"
        - name: msn
          in: path
          description: The Vipps MSN (merchant serial number) for the sale unit.
          required: true
          schema:
            maxLength: 6
            minLength: 5
            pattern: ^\d{5,6}$
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/SalesUnit"
        "400":
          description: Invalid request, check request parameters
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/MiddlewareError"
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Item does not exist
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Request method not supported
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Problem:
      title: Problem
      type: object
      properties:
        type:
          type: string
          format: uri
          example: "https://example.com/problem/unauthorized"
          description: A URI reference that identifies the problem type.
        title:
          type: string
          example: "Not authorized to create a product order"
          description: "A short, human-readable summary of the problem type.  It will not change from occurrence to occurrence of the problem."
        status:
          type: integer
          description: The HTTP response code
          example: 401
        detail:
          type: string
          example: "Not authorized to create a product order. Check whether Authorization token and Ocp-Apim-Subscription-Key are correct."
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          example: "/products/orders"
          description: A URI reference that identifies the specific occurrence of the problem
        traceId:
          type: string
          example: "81b83246-5c19-7b94-875b-ea6d1114f099"
          description: An id that can be used to facilitate in tracing the error.
        extraDetails:
          type: array
          items:
            $ref: "#/components/schemas/ExtraDetails"
    ExtraDetails:
      type: object
      properties:
        key:
          type: string
          example: "CustomErrorCode"
          description: Key
        value:
          type: string
          example: "9000"
          description: Value
    ProductOrderRequest:
      title: Product Order Request for a merchant
      required:
        - orgno
        - productType
      properties:
        orgno:
          type: string
          pattern: "^[0-9]{9,9}$"
          minLength: 9
          maxLength: 9
          example: "987654321"
          description: Organisation number of the merchant for whom the partner is submitting the product order.
        salesUnitName:
          nullable: true
          type: string
          pattern: '^[\p{L}\p{M}\d\\(\)-_\+\s\.]+$'
          minLength: 1
          maxLength: 30
          example: ACME Fantastic Fitness
          description: The name of the point of sale that will be shown to the users in Vipps app or Vipps landing page.
        salesUnitLogo:
          nullable: true
          type: string
          format: byte
          example: "VGhlIGltYWdlIGdvZXMgaGVyZQ=="
          description: |
            Base64 encoded string of the logo of the merchant.
            The logo will be displayed in the Vipps app, both when paying and on receipts and also in Vipps landing page.
            The logo must be in PNG (Portable Network Graphics) format.
            Square images are recommended.
            The longest side can not be more than 1000 pixels.
            The minimum size is 100 x 100 pixels.
            Images not matching the above criteria will not be shown to the merchant in the merchant portal.
        settlementAccountNumber:
          nullable: true
          type: string
          pattern: "^[0-9]{11,11}$"
          minLength: 11
          maxLength: 11
          example: "86011117947"
          description: The bank account number belonging to the organisation that will be used for settlement.
        pricePackageKey:
          nullable: true
          type: string
          pattern: "^[a-zA-Z0-9-]{1,15}$"
          minLength: 1
          maxLength: 255
          deprecated: true
          example: posstandard
          description: (deprecated) Optional. One of the price packages that are registered for the partner in the Vipps system. Please note, it is not the PriceId (3 digit), but the name, such as "standard", "price1", etc, that is applicable to the partner. If the field is not provided, the merchant must select it manually from the product order section of the merchant portal before submitting.
        pricePackageId:
          type: string
          format: uuid
          nullable: true
          example: "8a11afb7-c223-48ed-8ca6-4722b97261aa"
          description: For 'VIPPS_PA_NETT' and 'VIPPS_I_KASSA'. One of the price packages that are registered for the partner in the Vipps system. Please note, it is not the PriceId (3 digit) but a new uuid, that is applicable to the partner. If the field is not provided, the merchant must select it manually from the product order section of the merchant portal before submitting.
        productType:
          type: string
          enum:
            - VIPPS_PA_NETT
            - VIPPS_LOGG_INN
            - VIPPS_CHECKOUT
            - VIPPS_I_KASSA
          x-enum-varnames:
            - VIPPS_PA_NETT
            - VIPPS_LOGG_INN
            - VIPPS_CHECKOUT
            - VIPPS_I_KASSA
          example: VIPPS_PA_NETT
          description: The type of product ordered for the merchant
        productUseCase:
          type: string
          enum:
            - Website
            - WebsiteWithTest
            - App
            - Unknown
          example: WebsiteWithTest
          nullable: true
          description: Where will sales take place?
        annualTurnover:
          type: integer
          minimum: 0
          maximum: 9223372036854775807
          format: int64
          description: Annual turnover for the merchant in NOK (without øre).
          example: 100000
        intendedPurpose:
          type: string
          description: |-
            Description of the product or products that will be sold.
            Please include all information relevant to processing the product
            order, such as including "POS integration" to indicate that the
            sale unit needs `skipLandingPage`, or that the sale unit needs
            "direct capture".
          example: |-
            Gym membership for accessing the gym's facilities.
            Guest will be not physically present when buying the subscription,
            as that is done on the gym's website.
          nullable: true
        website:
          nullable: true
          type: object
          required:
            - url
            - termsUrl
          properties:
            url:
              type: string
              format: URL
              pattern: '^(https:\/\/)[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$'
              description: For 'WebsiteWithTest' or 'Website'. The URL to the merchant's website
              example: "https://example.com"
            termsUrl:
              type: string
              format: URL
              pattern: '^(https:\/\/)[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$'
              description: The URL that points to the merchants sales terms
              example: "https://example.com/terms-and-conditions"
            testWebsiteUrl:
              nullable: true
              type: string
              format: URL
              pattern: '^(https:\/\/)[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$'
              description: For 'WebsiteWithTest'. The URL to the merchants test website
              example: "https://test.example.com"
            testWebsiteUsername:
              nullable: true
              type: string
              description: For 'WebsiteWithTest'. Username to log in on the test website
              example: test-user
            testWebsitePassword:
              nullable: true
              type: string
              description: For 'WebsiteWithTest'. Password to log in on the test website
              example: test-password
        complianceData:
          nullable: true
          type: object
          properties:
            giftCard:
              nullable: true
              type: object
              required:
                - isSalesPercentageLessThanTen
              properties:
                isSalesPercentageLessThanTen:
                  type: boolean
                  default: false
                  description: The percentage the giftcard sales consists of. Either 'Less than 10%' or '10% and more'
                  example: false
                  nullable: true
                validityDuration:
                  type: string
                  description: If 'isSalesPercentageLessThanTen' is true. For how long is the gift card valid after purchase?
                  example: 3 years
                  nullable: true
                giftCardTurnoverShare:
                  type: string
                  description: If 'isSalesPercentageLessThanTen' is true. What percentage of total sales are giftcards?
                  example: about 25%
                  nullable: true
            membership:
              nullable: true
              type: object
              required:
                - turnoverShare
                - periodDistribution
              properties:
                turnoverShare:
                  type: string
                  description: Estimated turnover share of membership sales in percentage
                  example: about 25%
                membershipValidity:
                  type: string
                  enum:
                    - CurrentCalendarYear
                    - OneYearFromPayment
                  nullable: true
                  example: CurrentCalendarYear
                  description: Is the membership valid from the current calendar year or 1 year from payment?
                periodDistribution:
                  type: string
                  description: Distribution of memberships in different periods that is being sold
                  example: 50% yearly 20% monthly
            subscription:
              nullable: true
              type: object
              required:
                - turnoverShare
                - periodDistribution
              properties:
                turnoverShare:
                  type: string
                  description: Estimated turnover share of subscription sales in percentage
                  example: about 25%
                periodDistribution:
                  type: string
                  description: Distribution of subscriptions in different periods that is being sold
                  example: 50% yearly 20% monthly
            course:
              nullable: true
              type: object
              required:
                - turnoverShare
                - timeBeforeOrder
                - period
                - online
              properties:
                turnoverShare:
                  type: string
                  description: Estimated turnover share of course sales in percentage
                  example: about 25%
                timeBeforeOrder:
                  type: string
                  description: How long in advance it is common to order and pay for a course
                  example: 10 days
                period:
                  type: string
                  description: How long the duration of a course usually is
                  example: once every 6. week
                isOnlineCourseOffered:
                  type: boolean
                  description: True if there are online courses offered
                  default: false
                  example: false
                  nullable: true
                onlineAccessibleTime:
                  type: string
                  description: How long after purchase does a user have access to the course
                  example: for 3 months
                  nullable: true
            ticket:
              nullable: true
              type: object
              required:
                - turnoverShare
                - prepurchaseTime
              properties:
                turnoverShare:
                  type: string
                  description: Estimated turnover share of ticket sales in percentage
                  example: about 25%
                prepurchaseTime:
                  type: string
                  description: How long in advance of an event it is common to order and pay for a ticket
                  example: 10 weeks
            rent:
              nullable: true
              type: object
              required:
                - turnoverShare
                - prepurchaseTime
                - averageRentalDuration
              properties:
                turnoverShare:
                  type: string
                  description: Estimated turnover share of rent sales in percentage
                  example: about 25%
                prepurchaseTime:
                  type: string
                  description: How long in advance of the rental period it is common to order and pay
                  example: 15 days
                averageRentalDuration:
                  type: string
                  description: How long the average rental period is
                  example: 3 weeks
            prepaidServices:
              nullable: true
              type: object
              required:
                - turnoverShare
                - prepurchaseTime
              properties:
                turnoverShare:
                  type: string
                  description: Estimated turnover share of prepaid services sales in percentage
                  example: about 25%
                prepurchaseTime:
                  type: string
                  description: How long in advance of a service it is common to order and pay
                  example: 10 weeks
            donation:
              nullable: true
              type: object
              required:
                - acceptsDonation
              properties:
                acceptsDonation:
                  type: boolean
                  description: true if merchant will receive donation through Vipps
                  default: false
                  example: false
                  nullable: true
    ProductOrderResponse:
      title: Product Order Response
      type: object
      properties:
        prefilledOrderId:
          type: string
          format: uuid
          description: A UUID reference that identifies the product order request submitted by the partner.
          example: 81b83246-5c19-7b94-875b-ea6d1114f099
        returnUrl:
          type: string
          format: uri
          description: A URL for the merchant to complete the signup.
          example: "https://portal.vipps.no/register/vippspanett/81b83246-5c19-7b94-875b-ea6d1114f099"
    SalesUnit:
      required:
        - msn
        - name
        - orgno
      type: object
      properties:
        msn:
          maxLength: 6
          minLength: 5
          pattern: ^\d{5,6}$
          type: string
          description: Vipps MSN (merchant serial number)
          example: "123456"
          x-order: 4
        name:
          type: string
          description: "The sale unit's name"
          example: "ACME Fantastic Fitness"
          x-order: 5
        orgno:
          type: string
          description: The organization number for the merchant
          minLength: 9
          maxLength: 9
          pattern: '^\d{9}$'
          example: 987654321
        additionalDetails:
          type: object
          description: "Additional details that might or might not be available. In the case that any of these are not provided, it doesn't mean that those details don't apply."
          properties:
            skipLandingPage:
              type: boolean
              description: "If the merchant has access to sending skipLandingPage for eCommerce requests"
              default: false
              example: false
            isPureLogin:
              type: boolean
              description: "If the sales unit is only approved for Vipps-Login use"
              default: false
              example: false
            captureType:
              type: string
              description: "The capture type of the sales unit"
              enum:
                - "ReserveCapture"
                - "DirectCapture"
                - "NotApplicable"
              default: "ReserveCapture"
              example: "ReserveCapture"
            recurring:
              type: boolean
              description: "If the sales unit has access to vipps-recurring-api"
              default: true
              example: false
      description: Details of a sale unit
    GetOrg:
      required:
        - msn
      type: object
      properties:
        msn:
          type: array
          description: List of Vipps MSNs (merchant serial numbers)
          items:
            maxLength: 6
            minLength: 5
            pattern: ^\d{5,6}$
            type: string
            description: Vipps MSN (merchant serial number)
            example: "123456"
            x-order: 4
      description: Response of successful getSalesUnits operation
    Error:
      required:
        - detail
        - instance
        - status
        - title
      type: object
      properties:
        type:
          type: string
          description: |
            "A URI reference that identifies the problem type"
          example: https://example.net/validation-error
          x-order: 1
        title:
          type: string
          description: |
            "A short, human-readable summary of the problem type"
          example: MSN validation error
          x-order: 2
        status:
          type: integer
          description: |
            "The code generated by the origin server for this occurrence of the problem"
          example: 400
          x-order: 3
        detail:
          type: string
          description: |
            "A human-readable explanation specific to this occurrence of the problem.
            The detail member, if present, ought to focus on helping the client correct the problem,
            rather than giving debugging information."
          example: MSN must be 5 or 6 digits
          x-order: 4
        instance:
          type: string
          description: |
            "Unique ID for the request which can be used to find related events (logs)"
          example: https://example.net/validation-error/msn
          x-order: 5
      description: Problem details of HTTP APIs based on RFC 7807
    MiddlewareError:
      type: object
      properties:
        code:
          type: integer
          description: |
            "The status code generated by the origin server for this occurrence of the problem"
          example: 400
          x-order: 1
        message:
          type: string
          description: |
            "A human-readable explanation specific to this occurrence of the problem."
          example: MSN must be at least five digits
          x-order: 2
      description: Problem details
  securitySchemes:
    Bearer-Authorization:
      name: Authorization
      type: apiKey
      in: header
      description: Access bearer token (JWT)
  parameters:
    Idempotency-Key:
      name: Idempotency-Key
      in: header
      required: true
      schema:
        type: string
        example: 81b83246-5c19-7b94-875b-ea6d1114f099
      description: "Idempotency key for the request, ensures idempotent actions. Not required, but recommended."
    Ocp-APIM-Subscription-Key:
      name: Ocp-Apim-Subscription-Key
      in: header
      required: true
      schema:
        type: string
        example: da7d5b0e18a84aeda961c0c31b75c2a9
      description: Vipps Subscription Key
    orgno:
      name: orgno
      in: path
      description: The organization number for the merchant
      required: true
      schema:
        maxLength: 9
        minLength: 9
        pattern: ^\d{9}$
        type: string
        example: 987654321
    msn:
      name: msn
      in: path
      description: The Vipps MSN (merchant serial number)
      required: true
      schema:
        maxLength: 6
        minLength: 5
        pattern: ^\d{5,6}$
        type: string
        example: 123456
